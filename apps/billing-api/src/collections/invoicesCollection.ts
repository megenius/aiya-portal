const saas_invoicesCollection = {
  collection: "saas_invoices",
  meta: {
    collection: "saas_invoices",
    icon: "receipt",
    note: "Invoice information from Stripe",
    display_template: "{{customer.name}} - {{amount_due}} {{currency}}",
    hidden: false,
    singleton: false,
    translations: [
      {
        language: "en-US",
        translation: "Invoices",
      },
      {
        language: "th-TH",
        translation: "ใบแจ้งหนี้",
      },
    ],
    sort: 1,
  },
  schema: {
    name: "saas_invoices",
    comment: "Stores invoice data from Stripe",
  },
  fields: [
    {
      collection: "saas_invoices",
      field: "id",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "id",
        special: null,
        interface: "input",
        options: null,
        display: null,
        display_options: null,
        readonly: false,
        hidden: false,
        sort: 1,
        width: "full",
        required: true,
        note: "Stripe invoice reference",
      },
      schema: {
        name: "id",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: null,
        max_length: 255,
        is_generated: true,
        is_nullable: false,
        is_unique: true,
        is_primary_key: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "customer",
      type: "uuid",
      schema: {
        name: "customer",
        table: "saas_invoices",
        data_type: "uuid",
        default_value: null,
        is_nullable: true,
        is_unique: false,
        foreign_key_schema: "public",
        foreign_key_table: "saas_customers",
        foreign_key_column: "id",
      },
      meta: {
        collection: "saas_invoices",
        field: "customer",
        special: ["m2o"],
        interface: "select-dropdown-m2o",
        options: {
          template: "{{name}}",
        },
        width: "full",
        required: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "stripe_customer_id",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "stripe_customer_id",
        special: null,
        interface: "input",
        options: null,
        readonly: false,
        hidden: false,
        sort: 2,
        width: "full",
        required: true,
        note: "Stripe customer reference",
      },
      schema: {
        name: "stripe_customer_id",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: null,
        max_length: 255,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "stripe_subscription_id",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "stripe_subscription_id",
        special: null,
        interface: "input",
        options: null,
        readonly: false,
        hidden: false,
        sort: 3,
        width: "full",
        required: true,
        note: "Stripe subscription reference",
      },
      schema: {
        name: "stripe_subscription_id",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: null,
        max_length: 255,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "stripe_payment_intent_id",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "stripe_payment_intent_id",
        special: null,
        interface: "input",
        options: null,
        readonly: false,
        hidden: false,
        sort: 4,
        width: "full",
        required: false,
        note: "Stripe payment intent reference",
      },
      schema: {
        name: "stripe_payment_intent_id",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: null,
        max_length: 255,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "amount_due",
      type: "decimal",
      meta: {
        collection: "saas_invoices",
        field: "amount_due",
        special: null,
        interface: "input",
        options: {
          min: 0,
        },
        readonly: false,
        hidden: false,
        sort: 5,
        width: "half",
        required: true,
      },
      schema: {
        name: "amount_due",
        table: "saas_invoices",
        data_type: "numeric",
        numeric_precision: 10,
        numeric_scale: 2,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "currency",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "currency",
        special: null,
        interface: "input",
        options: null,
        readonly: false,
        hidden: false,
        sort: 6,
        width: "half",
        required: true,
      },
      schema: {
        name: "currency",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: "thb",
        max_length: 3,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "status",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "status",
        special: null,
        interface: "select-dropdown",
        options: {
          choices: [
            { text: "Draft", value: "draft" },
            { text: "Open", value: "open" },
            { text: "Paid", value: "paid" },
            { text: "Uncollectible", value: "uncollectible" },
            { text: "Void", value: "void" },
          ],
        },
        display: null,
        display_options: null,
        readonly: false,
        hidden: false,
        sort: 7,
        width: "full",
        required: true,
      },
      schema: {
        name: "status",
        table: "saas_invoices",
        data_type: "character varying",
        default_value: "draft",
        max_length: 50,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "period_start",
      type: "timestamp",
      meta: {
        collection: "saas_invoices",
        field: "period_start",
        special: null,
        interface: "datetime",
        readonly: false,
        hidden: false,
        sort: 8,
        width: "half",
        required: true,
        note: "Invoice period start date",
      },
      schema: {
        name: "period_start",
        table: "saas_invoices",
        data_type: "timestamp with time zone",
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "period_end",
      type: "timestamp",
      meta: {
        collection: "saas_invoices",
        field: "period_end",
        special: null,
        interface: "datetime",
        readonly: false,
        hidden: false,
        sort: 9,
        width: "half",
        required: true,
        note: "Invoice period end date",
      },
      schema: {
        name: "period_end",
        table: "saas_invoices",
        data_type: "timestamp with time zone",
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "due_date",
      type: "timestamp",
      meta: {
        collection: "saas_invoices",
        field: "due_date",
        special: null,
        interface: "datetime",
        readonly: false,
        hidden: false,
        sort: 10,
        width: "full",
        required: false,
        note: "Invoice due date",
      },
      schema: {
        name: "due_date",
        table: "saas_invoices",
        data_type: "timestamp with time zone",
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "subtotal",
      type: "decimal",
      meta: {
        collection: "saas_invoices",
        field: "subtotal",
        special: null,
        interface: "input",
        options: {
          min: 0,
        },
        readonly: false,
        hidden: false,
        sort: 11,
        width: "half",
        required: true,
        note: "Total before tax and discounts",
      },
      schema: {
        name: "subtotal",
        table: "saas_invoices",
        data_type: "numeric",
        numeric_precision: 10,
        numeric_scale: 2,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "tax",
      type: "decimal",
      meta: {
        collection: "saas_invoices",
        field: "tax",
        special: null,
        interface: "input",
        options: {
          min: 0,
        },
        readonly: false,
        hidden: false,
        sort: 12,
        width: "half",
        required: false,
        note: "Tax amount",
      },
      schema: {
        name: "tax",
        table: "saas_invoices",
        data_type: "numeric",
        numeric_precision: 10,
        numeric_scale: 2,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "total",
      type: "decimal",
      meta: {
        collection: "saas_invoices",
        field: "total",
        special: null,
        interface: "input",
        options: {
          min: 0,
        },
        readonly: false,
        hidden: false,
        sort: 13,
        width: "half",
        required: true,
        note: "Final total after tax and discounts",
      },
      schema: {
        name: "total",
        table: "saas_invoices",
        data_type: "numeric",
        numeric_precision: 10,
        numeric_scale: 2,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "billing_reason",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "billing_reason",
        special: null,
        interface: "select-dropdown",
        options: {
          choices: [
            { text: "Subscription Create", value: "subscription_create" },
            { text: "Subscription Update", value: "subscription_update" },
            { text: "Subscription Cycle", value: "subscription_cycle" },
            { text: "Subscription Threshold", value: "subscription_threshold" },
            { text: "Manual", value: "manual" },
          ],
        },
        readonly: false,
        hidden: false,
        sort: 14,
        width: "full",
        required: false,
        note: "Reason for invoice generation",
      },
      schema: {
        name: "billing_reason",
        table: "saas_invoices",
        data_type: "character varying",
        max_length: 50,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "attempt_count",
      type: "integer",
      meta: {
        collection: "saas_invoices",
        field: "attempt_count",
        special: null,
        interface: "input",
        options: {
          min: 0,
        },
        readonly: false,
        hidden: false,
        sort: 15,
        width: "half",
        required: true,
        note: "Number of payment attempts",
      },
      schema: {
        name: "attempt_count",
        table: "saas_invoices",
        data_type: "integer",
        default_value: 0,
        is_nullable: false,
      },
    },
    {
      collection: "saas_invoices",
      field: "next_payment_attempt",
      type: "timestamp",
      meta: {
        collection: "saas_invoices",
        field: "next_payment_attempt",
        special: null,
        interface: "datetime",
        readonly: false,
        hidden: false,
        sort: 16,
        width: "half",
        required: false,
        note: "Next automatic payment attempt",
      },
      schema: {
        name: "next_payment_attempt",
        table: "saas_invoices",
        data_type: "timestamp with time zone",
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "payment_method",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "payment_method",
        special: null,
        interface: "input",
        readonly: false,
        hidden: false,
        sort: 17,
        width: "full",
        required: false,
        note: "Payment method used",
      },
      schema: {
        name: "payment_method",
        table: "saas_invoices",
        data_type: "character varying",
        max_length: 255,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "hosted_invoice_url",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "hosted_invoice_url",
        special: null,
        interface: "input",
        readonly: false,
        hidden: false,
        sort: 18,
        width: "full",
        required: false,
        note: "URL for hosted invoice page",
      },
      schema: {
        name: "hosted_invoice_url",
        table: "saas_invoices",
        data_type: "character varying",
        max_length: 500,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "pdf_invoice_url",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "pdf_invoice_url",
        special: null,
        interface: "input",
        readonly: false,
        hidden: false,
        sort: 19,
        width: "full",
        required: false,
        note: "URL for PDF invoice",
      },
      schema: {
        name: "pdf_invoice_url",
        table: "saas_invoices",
        data_type: "character varying",
        max_length: 500,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "number",
      type: "string",
      meta: {
        collection: "saas_invoices",
        field: "number",
        special: null,
        interface: "input",
        readonly: false,
        hidden: false,
        sort: 20,
        width: "full",
        required: false,
        note: "Invoice number",
      },
      schema: {
        name: "number",
        table: "saas_invoices",
        data_type: "character varying",
        max_length: 255,
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "paid_at",
      type: "timestamp",
      meta: {
        collection: "saas_invoices",
        field: "paid_at",
        special: null,
        interface: "datetime",
        readonly: false,
        hidden: false,
        sort: 21,
        width: "half",
        required: false,
        note: "When the invoice was paid",
      },
      schema: {
        name: "paid_at",
        table: "saas_invoices",
        data_type: "timestamp with time zone",
        is_nullable: true,
      },
    },
    {
      collection: "saas_invoices",
      field: "metadata",
      type: "json",
      meta: {
        collection: "saas_invoices",
        field: "metadata",
        special: null,
        interface: "input-code",
        options: {
          language: "json",
        },
        readonly: false,
        hidden: false,
        sort: 11,
        width: "full",
        required: false,
        note: "Additional invoice metadata",
      },
      schema: {
        name: "metadata",
        table: "saas_invoices",
        data_type: "jsonb",
        is_nullable: true,
      },
    },
  ],
};

// Relationship definitions
const saas_invoicesCustomerFiledRelationships = {
  collection: "saas_invoices",
  field: "customer",
  related_collection: "saas_customers",
  meta: { sort_field: null },
  schema: {
    table: "saas_invoices",
    column: "customer",
    foreign_key_schema: "public",
    foreign_key_table: "saas_customers",
    foreign_key_column: "id",
    on_update: "NO ACTION",
    on_delete: "CASCADE",
  },
};


export {
  saas_invoicesCollection,
  saas_invoicesCustomerFiledRelationships,
};
